cabal-version: >=1.2
build-type: Simple
name: uuagc
version: @VERSION@
license: GPL
license-file: LICENSE
maintainer: Arie Middelkoop <ariem@cs.uu.nl>
homepage: http://www.cs.uu.nl/wiki/HUT/WebHome
description: Generates Haskell files from an attribute grammar specification
synopsis: Attribute Grammar System of Universiteit Utrecht
category: Development
stability: Stable
copyright: Universiteit Utrecht
extra-source-files: README, uuagc.cabal-for-ghc-6.6, uuagc_options

flag compatibility1
  description: compatibility flag.
flag compatibility2
  description: compatibility flag.
executable uuagc
  if flag(compatibility1)
    build-depends: base >= 4, base < 5, ghc-prim
  else
    build-depends: base < 4

  if flag(compatibility2)
    build-depends: base >= 3, base < 5, directory, array
  else
    build-depends: base < 3

  build-depends: haskell98, uulib>=0.9.12
  main-is: Ag.hs
  other-modules: Ag
    , CommonTypes
    , DepTypes
    , GrammarInfo
    , HsTokenScanner
    , HsTokenWriter
    , Options
    , PPUtil
    , Parser
    , Pretty
    , Scanner
    , SequentialComputation
    , SequentialTypes
    , Streaming
    , TokenDef
    , Version
    , AbstractSyntax
    , AbstractSyntaxDump
    , Code
    , CodeSyntax
    , CodeSyntaxDump
    , ConcreteSyntax
    , DeclBlocks
    , DefaultRules
    , Desugar
    , ErrorMessages
    , Expression
    , FixedPointTransform
    , FixedPointHelper
    , SemFPCSegments
    , GenerateCode
    , HsToken
    , Interfaces
    , InterfacesRules
    , Order
    , Patterns
    , PrintCode
    , PrintOcamlCode
    , PrintVisitCode
    , PrintErrorMessages
    , SemHsTokens
    , Transform
    , ATermWrite
    , ATermAbstractSyntax
    , TfmToVisage
    , Visage
    , VisageSyntax
    , VisagePatterns
  extensions: TypeSynonymInstances, MultiParamTypeClasses
  hs-source-dirs: src
  x-agmodule: file : "src/AbstractSyntax.ag" options : data, pretty, genlinepragmas, module "AbstractSyntax"
  x-agmodule: file : "src/ConcreteSyntax.ag" options : data, pretty, genlinepragmas, module "ConcreteSyntax"
  x-agmodule: file : "src/ErrorMessages.ag" options : data, pretty, genlinepragmas, module "ErrorMessages"
  x-agmodule: file : "src/HsToken.ag" options : data, pretty, genlinepragmas, module "HsToken"
  x-agmodule: file : "src/Code.ag" options : data, pretty, genlinepragmas, module "Code"
  x-agmodule: file : "src/Expression.ag" options : data, pretty, genlinepragmas, module "Expression"
  x-agmodule: file : "src/Patterns.ag" options : data, pretty, genlinepragmas, module "Patterns"
  x-agmodule: file : "src/Interfaces.ag" options : data, pretty, genlinepragmas, module "Interfaces"
  x-agmodule: file : "src/CodeSyntax.ag" options : data, pretty, genlinepragmas, module "CodeSyntax"
  x-agmodule: file : "src/DeclBlocks.ag" options : data, pretty, genlinepragmas, module "DeclBlocks" 
  x-agmodule: file : "src/VisageSyntax.ag" options : data, pretty, genlinepragmas, module "VisageSyntax"
  x-agmodule: file : "src/VisagePatterns.ag" options : data, pretty, genlinepragmas, module "VisagePatterns"
  x-agmodule: file : "src/Desugar.ag" options : catas, semfuns, signatures, pretty, wrappers, newtypes, genlinepragmas, module "Desugar"
  x-agmodule: file : "src/DefaultRules.ag" options : catas, semfuns, signatures, pretty, wrappers, newtypes, genlinepragmas, module "DefaultRules"
  x-agmodule: file : "src/GenerateCode.ag" options : catas, semfuns, signatures, pretty, wrappers, newtypes, genlinepragmas, module "GenerateCode"
  x-agmodule: file : "src/PrintOcamlCode.ag" options : catas, semfuns, signatures, pretty, wrappers, newtypes, genlinepragmas, module "PrintOcamlCode"
  x-agmodule: file : "src/PrintCode.ag" options : catas, semfuns, signatures, pretty, wrappers, newtypes, genlinepragmas, module "PrintCode"
  x-agmodule: file : "src/PrintVisitCode.ag" options : catas, semfuns, signatures, pretty, wrappers, newtypes, genlinepragmas, module "PrintVisitCode"
  x-agmodule: file : "src/PrintErrorMessages.ag" options : catas, semfuns, signatures, pretty, wrappers, newtypes, genlinepragmas, module "PrintErrorMessages"
  x-agmodule: file : "src/Transform.ag" options : catas, semfuns, signatures, pretty, wrappers, newtypes, genlinepragmas, module "Transform"
  x-agmodule: file : "src/Order.ag" options : catas, semfuns, signatures, pretty, wrappers, newtypes, genlinepragmas, module "Order"
  x-agmodule: file : "src/AbstractSyntaxDump.ag" options : catas, semfuns, signatures, pretty, wrappers, newtypes, genlinepragmas, module "AbstractSyntaxDump"
  x-agmodule: file : "src/CodeSyntaxDump.ag" options : catas, semfuns, signatures, pretty, wrappers, newtypes, genlinepragmas, module "CodeSyntaxDump"
  x-agmodule: file : "src/Visage.ag" options : catas, semfuns, signatures, pretty, wrappers, newtypes, genlinepragmas, module "Visage"
  x-agmodule: file : "src/TfmToVisage.ag" options : catas, semfuns, signatures, pretty, wrappers, newtypes, genlinepragmas, module "TfmToVisage"
  x-agmodule: file : "src/FixedPointTransform.ag" options : catas, semfuns, signatures, pretty, wrappers, newtypes, genlinepragmas, module "FixedPointTransform"
  x-agmodule: file : "src/InterfacesRules.lag" options : catas, semfuns, signatures, pretty, wrappers, newtypes, genlinepragmas, module "InterfacesRules"
  x-agmodule: file : "src/SemHsTokens.ag" options : catas, semfuns, signatures, pretty, wrappers, newtypes, genlinepragmas, module "SemHsTokens"
  x-agmodule: file : "src/SemFPCSegments.ag" options : catas, semfuns, signatures, pretty, wrappers, newtypes, genlinepragmas, module "SemFPCSegments"

Library
   build-depends:   base >= 4, base < 5, Cabal, directory, process, uulib>=0.9.12, filepath, mtl, containers <= 0.3.0.0
   hs-source-dirs:  cabal-plugin/src
   exposed-modules: Distribution.Simple.UUAGC
   other-modules:   Distribution.Simple.UUAGC.UUAGC,
                    Distribution.Simple.UUAGC.Parser,
                    Distribution.Simple.UUAGC.AbsSyn,
                    Distribution.Simple.UUAGC.Options
